[{"path":"https://gladstone-institutes.github.io/LODopt/articles/intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to LODopt","text":"LODopt package provides tools analyzing associations cell type abundances experimental conditions single-cell RNA-seq data.","code":""},{"path":[]},{"path":"https://gladstone-institutes.github.io/LODopt/articles/intro.html","id":"example-data","dir":"Articles","previous_headings":"Quick Start","what":"Example Data","title":"Introduction to LODopt","text":"simulate data 30 samples 25 clusters, 4 clusters (c0, c2, c7 c14) changed abundance.","code":"# Create example count matrix   # Create test data   set.seed(123)    # No of clusters in single cell dataset    K=25    # No of cells in tissue    depth = 1e9    # Total number of samples    nsamp = 30    alpha = 10^runif(K, min=log10(0.5), max = log10(10))    p <- dirmult::rdirichlet(alpha = alpha) |> sort()    p <- p[p > 0.001]    p <- p/sum(p)    size <- rep(10, length(p))    change_mean = rep(1, length(p))    ##changed cluster indices    change_mean[c(1,3,8,15)] = c(0.2, 2, 0.2, 2)    # Simulate counts    counts_res <- simulate_cellCounts_fromTissue(props=p,nsamp=nsamp,depth=depth, size = size, change_mean = change_mean)"},{"path":"https://gladstone-institutes.github.io/LODopt/articles/intro.html","id":"set-up-the-required-summarizedexperiment-object","dir":"Articles","previous_headings":"Quick Start","what":"Set up the required SummarizedExperiment object","title":"Introduction to LODopt","text":"","code":"counts <- counts_res$counts    pheno_data <- data.frame(sampleID = paste0(\"S\", 1:30),                            groupid = c(rep(\"group0\", 15), rep(\"group1\", 15)))   pheno_data %<>% tibble::column_to_rownames(\"sampleID\")      require(SummarizedExperiment)   model_formula <- \"groupid\"   cellcomp_se <- SummarizedExperiment(assays = list(counts=counts),                                       colData = pheno_data,                                       metadata = list(modelFormula = model_formula,                                                       coef_of_interest_index = 2,                                                       reference_levels_of_variables = list(c(\"groupid\", \"group0\")),                                                       random_seed = 123456,                                                       unchanged_cluster_indices = NULL))"},{"path":"https://gladstone-institutes.github.io/LODopt/articles/intro.html","id":"running-association-analysis","dir":"Articles","previous_headings":"Quick Start","what":"Running Association Analysis","title":"Introduction to LODopt","text":"","code":"cellcomp_res <- logodds_optimized_normFactors(cellcomp_se) #> [1] \"Running iteration no. 1\" #> boundary (singular) fit: see help('isSingular') #> [1] \"Running iteration no. 2\" #> [1] \"Running iteration no. 3\" #> [1] \"Found stable solution\""},{"path":"https://gladstone-institutes.github.io/LODopt/articles/intro.html","id":"summarizing-results","dir":"Articles","previous_headings":"Quick Start","what":"Summarizing Results","title":"Introduction to LODopt","text":"estimate column log odds ratio estimates cluster-specific association groupid estimates_significance corresponding raw p-values corresponding null hypothesis log odds ratio equal 0.","code":"print(cellcomp_res$res) #>    cluster_id    comparison   estimates estimates_significance #> 1          c0 groupidgroup1 -1.52100359           1.079388e-17 #> 2          c1 groupidgroup1 -0.17344082           2.124728e-01 #> 3          c2 groupidgroup1  0.79391408           1.975057e-09 #> 4          c3 groupidgroup1  0.04588954           7.117915e-01 #> 5          c4 groupidgroup1 -0.04211118           6.974807e-01 #> 6          c5 groupidgroup1 -0.13292183           2.514397e-01 #> 7          c6 groupidgroup1 -0.02823263           7.608435e-01 #> 8          c7 groupidgroup1 -1.75714635           3.002863e-50 #> 9          c8 groupidgroup1  0.13039553           1.830506e-01 #> 10         c9 groupidgroup1  0.14547388           2.132688e-01 #> 11        c10 groupidgroup1 -0.09124305           5.273222e-01 #> 12        c11 groupidgroup1  0.09725929           3.803643e-01 #> 13        c12 groupidgroup1  0.02971688           8.012406e-01 #> 14        c13 groupidgroup1 -0.07937818           4.649689e-01 #> 15        c14 groupidgroup1  0.68735275           9.847319e-12 #> 16        c15 groupidgroup1 -0.04634329           7.559317e-01 #> 17        c16 groupidgroup1  0.08155154           4.830891e-01 #> 18        c17 groupidgroup1 -0.11924900           3.281300e-01 #> 19        c18 groupidgroup1 -0.14010580           2.215115e-01 #> 20        c19 groupidgroup1  0.01754712           8.798781e-01 #> 21        c20 groupidgroup1  0.09118643           4.688317e-01 #> 22        c21 groupidgroup1  0.06205020           4.739529e-01 #> 23        c22 groupidgroup1  0.10001258           4.572840e-01 #> 24        c23 groupidgroup1 -0.06205290           5.987648e-01 #> 25        c24 groupidgroup1  0.08948168           5.602581e-01"},{"path":"https://gladstone-institutes.github.io/LODopt/articles/intro.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Introduction to LODopt","text":"LODopt package provides simple interface testing associations cell type abundances experimental conditions, support multiple statistical methods comprehensive result visualization.","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Reuben Thomas. Author, maintainer.","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thomas R (2025). LODopt: Cell Type Abundance Association Analysis Single Cell Data. R package version 0.1.0, https://github.com/gladstone-institutes/LODopt.","code":"@Manual{,   title = {LODopt: Cell Type Abundance Association Analysis for Single Cell Data},   author = {Reuben Thomas},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/gladstone-institutes/LODopt}, }"},{"path":"https://gladstone-institutes.github.io/LODopt/index.html","id":"lodopt","dir":"","previous_headings":"","what":"Cell Type Abundance Association Analysis for Single Cell Data","title":"Cell Type Abundance Association Analysis for Single Cell Data","text":"Authors: Reuben Thomas, Ayushi Agrawal, Natalie Elphick Michela Traglia","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Cell Type Abundance Association Analysis for Single Cell Data","text":"LODopt statistical method estimate changes absolute cell composition different cell-types tissue using single cell assay-based counts cells assigned given clusters/cell types per biological unit/sample. based optimal identification sample-specific normalization factors account input tissue size differences followed fitting Generalized Linear Mixed Effects Model (GLMM) using observed counts per sample per cluster. range scenarios inferences derived LODopt represent changes (unobserved) absolute counts different cell-types much broader available approaches. Based tests using simulated data, comparison exisiting approaches, LODOpt maintains correct Type error, minimal bias estimated parameters interest comparable statistical power.","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cell Type Abundance Association Analysis for Single Cell Data","text":"Currently way install using packagedevtools: get error message everything spelled correctly, follow steps trying :","code":"devtools::install_github(\"gladstone-institutes/LODopt\") #set config usethis::use_git_config(user.name = \"YourName\", user.email = \"your@mail.com\")  #Go to github page to generate token usethis::create_github_token()  #paste your PAT into pop-up that follows... credentials::set_github_pat()"},{"path":"https://gladstone-institutes.github.io/LODopt/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"Cell Type Abundance Association Analysis for Single Cell Data","text":"tutorial introduces use LODopt R package.","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/estimate_variance_w_args.html","id":null,"dir":"Reference","previous_headings":"","what":"estimate_variance_w_args — estimate_variance_w_args","title":"estimate_variance_w_args — estimate_variance_w_args","text":"Total (across specified set clusters) sample variance log odds clusters membership across samples within clusters","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/estimate_variance_w_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimate_variance_w_args — estimate_variance_w_args","text":"","code":"estimate_variance_w_args(pars, counts, total_cells, optim_clusters)"},{"path":"https://gladstone-institutes.github.io/LODopt/reference/estimate_variance_w_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimate_variance_w_args — estimate_variance_w_args","text":"pars numeric vector length equal . samples, representing corresponding normalization factors counts cell count matrix number columns representing number samples number rows representing number cell-types clusters total_cells integer vector representing total number cells per sample optim_clusters integer vector representing indices clusters total variance calculated","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/estimate_variance_w_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"estimate_variance_w_args — estimate_variance_w_args","text":"numeric value representing sum variances log odds cluster membership across clusters specified optim_clusters","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/ineqfun_data.html","id":null,"dir":"Reference","previous_headings":"","what":"ineqfun_data — ineqfun_data","title":"ineqfun_data — ineqfun_data","text":"Normalized number total cells per sample","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/ineqfun_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ineqfun_data — ineqfun_data","text":"","code":"ineqfun_data(pars, total_cells)"},{"path":"https://gladstone-institutes.github.io/LODopt/reference/ineqfun_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ineqfun_data — ineqfun_data","text":"pars numeric vector length equal . samples, representing corresponding normalization factors total_cells integer vector representing total number cells per sample","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/ineqfun_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ineqfun_data — ineqfun_data","text":"numeric vector representing normalized number total cells per sample","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/logodds_optimized_normFactors.html","id":null,"dir":"Reference","previous_headings":"","what":"logodds_optimized_normFactors — logodds_optimized_normFactors","title":"logodds_optimized_normFactors — logodds_optimized_normFactors","text":"primary LODopt method","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/logodds_optimized_normFactors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logodds_optimized_normFactors — logodds_optimized_normFactors","text":"","code":"logodds_optimized_normFactors(cellcomp_se)"},{"path":"https://gladstone-institutes.github.io/LODopt/reference/logodds_optimized_normFactors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"logodds_optimized_normFactors — logodds_optimized_normFactors","text":"cellcomp_se SummarizedExperiment object includes counts: assay named counts number cells sample clusters. counts data frame rownames set cluster names (without spaces special characters) column names representing sample names data association analyses assigned colData data frame row names column names counts data frame Five parameters assigned metadata slot modelFormula representing model tested using variable colData coef_of_interest_index representing index coefficient interest tested model reference_levels_of_variables list vectors.vector two elements - name categorical variable (column name colData) reference level set variable random_seed integer random seed unchanged_cluster_indices cluster indices clusters known change, set NULL known","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/logodds_optimized_normFactors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"logodds_optimized_normFactors — logodds_optimized_normFactors","text":"list two elements results: data frame results differential analyses 4 columns - cluster_id, comparison, estimates (log odds ratio) estimate_significance (pvalue) optim_factors: numeric vector optimal normalization factors sample data","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/logodds_optimized_normFactors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"logodds_optimized_normFactors — logodds_optimized_normFactors","text":"","code":"# Create example data set.seed(123) # No of clusters in single cell dataset K=25 nsamp = 30 alpha = 10^runif(K, min=log10(0.5), max = log10(10)) p <- dirmult::rdirichlet(alpha = alpha) |> sort() p <- p[p > 0.001] p <- p/sum(p) size <- rep(10, length(p)) change_mean = rep(1, length(p)) ##clusters 1, 3, 8 and 15 are changed. Clusters 1 and 8 reduce in abundance while clusters 3 and 15 increase change_mean[c(1,3,8,15)] = c(0.2, 2, 0.2, 2) depth = 1e9 # Simulate counts counts_res <- simulate_cellCounts_fromTissue(props=p,nsamp=nsamp,depth=depth, size = size, change_mean = change_mean) counts <- counts_res$counts  pheno_data <- data.frame(sampleID = paste0(\"S\", 1:30),groupid = c(rep(\"group0\", 15), rep(\"group1\", 15))) require(magrittr) #> Loading required package: magrittr pheno_data %<>% tibble::column_to_rownames(\"sampleID\") require(SummarizedExperiment) #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #> Loading required package: generics #>  #> Attaching package: ‘generics’ #> The following objects are masked from ‘package:base’: #>  #>     as.difftime, as.factor, as.ordered, intersect, is.element, setdiff, #>     setequal, union #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, is.unsorted, lapply, #>     mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, #>     rank, rbind, rownames, sapply, saveRDS, table, tapply, unique, #>     unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Warning: package ‘GenomeInfoDb’ was built under R version 4.5.1 #>  #> Attaching package: ‘GenomicRanges’ #> The following object is masked from ‘package:magrittr’: #>  #>     subtract #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians model_formula <- \"groupid\" cellcomp_se <- SummarizedExperiment(assays = list(counts=counts),                                    colData = pheno_data,                                    metadata = list(modelFormula = model_formula,                                                    coef_of_interest_index = 2,                                                    reference_levels_of_variables = list(c(\"groupid\", \"group0\")),                                                    random_seed = 123456,                                                    unchanged_cluster_indices = NULL)) cellcomp_res <- logodds_optimized_normFactors(cellcomp_se) #> [1] \"Running iteration no. 1\" #> boundary (singular) fit: see help('isSingular') #> [1] \"Running iteration no. 2\" #> [1] \"Running iteration no. 3\" #> [1] \"Found stable solution\" print(cellcomp_res$res) #>    cluster_id    comparison   estimates estimates_significance #> 1          c0 groupidgroup1 -1.52100359           1.079388e-17 #> 2          c1 groupidgroup1 -0.17344082           2.124728e-01 #> 3          c2 groupidgroup1  0.79391408           1.975057e-09 #> 4          c3 groupidgroup1  0.04588954           7.117915e-01 #> 5          c4 groupidgroup1 -0.04211118           6.974807e-01 #> 6          c5 groupidgroup1 -0.13292183           2.514397e-01 #> 7          c6 groupidgroup1 -0.02823263           7.608435e-01 #> 8          c7 groupidgroup1 -1.75714635           3.002863e-50 #> 9          c8 groupidgroup1  0.13039553           1.830506e-01 #> 10         c9 groupidgroup1  0.14547388           2.132688e-01 #> 11        c10 groupidgroup1 -0.09124305           5.273222e-01 #> 12        c11 groupidgroup1  0.09725929           3.803643e-01 #> 13        c12 groupidgroup1  0.02971688           8.012406e-01 #> 14        c13 groupidgroup1 -0.07937818           4.649689e-01 #> 15        c14 groupidgroup1  0.68735275           9.847319e-12 #> 16        c15 groupidgroup1 -0.04634329           7.559317e-01 #> 17        c16 groupidgroup1  0.08155154           4.830891e-01 #> 18        c17 groupidgroup1 -0.11924900           3.281300e-01 #> 19        c18 groupidgroup1 -0.14010580           2.215115e-01 #> 20        c19 groupidgroup1  0.01754712           8.798781e-01 #> 21        c20 groupidgroup1  0.09118643           4.688317e-01 #> 22        c21 groupidgroup1  0.06205020           4.739529e-01 #> 23        c22 groupidgroup1  0.10001258           4.572840e-01 #> 24        c23 groupidgroup1 -0.06205290           5.987648e-01 #> 25        c24 groupidgroup1  0.08948168           5.602581e-01"},{"path":"https://gladstone-institutes.github.io/LODopt/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://gladstone-institutes.github.io/LODopt/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/simulate_cellCounts_fromTissue.html","id":null,"dir":"Reference","previous_headings":"","what":"simulate_cellCounts_fromTissue — simulate_cellCounts_fromTissue","title":"simulate_cellCounts_fromTissue — simulate_cellCounts_fromTissue","text":"Simulate single cell assay counts cell-types derived given tissue nsamp samples starting simulating tissue level counts downsampling obtain single cell assay counts","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/simulate_cellCounts_fromTissue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simulate_cellCounts_fromTissue — simulate_cellCounts_fromTissue","text":"","code":"simulate_cellCounts_fromTissue(   props,   nsamp,   size = NULL,   depth = 1e+09,   change_mean )"},{"path":"https://gladstone-institutes.github.io/LODopt/reference/simulate_cellCounts_fromTissue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simulate_cellCounts_fromTissue — simulate_cellCounts_fromTissue","text":"props vector proportions cell-types tissue. Values positive add 1. nsamp integer representing number samples size numeric negative binomial distribution parameter representing biological coefficient variation cell counts tissue depth Expected number cells tissue (default = 1e9) change_mean positive numeric vector size proportion representing change proportion individual cell-types. value 1 implies change, value less 1 implies depletion values 1 represent increase number associated cell-type","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/simulate_cellCounts_fromTissue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simulate_cellCounts_fromTissue — simulate_cellCounts_fromTissue","text":"list following elements: counts: count matrix rows corresponding clusters nsamp columns observed_log_odds_ratios: observed log odds ratios based simulated tissue level counts theoretical_log_odds_ratios: theoretical log odds ratios based provided parameters theoretical_log_absolute_abundance_ratios: theoretical log absolute abundance ratios based provided parameters observed_log_absolute_abundance_ratios: observed log absolute abundance ratios based simulated tissue level counts","code":""},{"path":"https://gladstone-institutes.github.io/LODopt/reference/simulate_cellCounts_fromTissue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simulate_cellCounts_fromTissue — simulate_cellCounts_fromTissue","text":"","code":"# Create example data set.seed(123) # No of clusters in single cell dataset K=25 nsamp = 30 alpha = 10^runif(K, min=log10(0.5), max = log10(10)) p <- dirmult::rdirichlet(alpha = alpha) |> sort() p <- p[p > 0.001] p <- p/sum(p) size <- rep(10, length(p)) change_mean = rep(1, length(p)) change_mean[c(1,3,8,15)] = c(0.2, 2, 0.2, 2) depth = 1e9 # Simulate counts counts_res <- simulate_cellCounts_fromTissue(props=p,nsamp=nsamp,depth=depth, size = size, change_mean = change_mean) print(counts_res$counts[1:3,1:3]) #>    S1 S2 S3 #> c0  7 10  6 #> c1 37 41 61 #> c2 28 29 48"}]
